@page "/cardholder-profile"
@using System.Collections.Generic
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Components.Forms

@code {
    private CardholderProfile profile = new CardholderProfile();
    private bool isEditingDetails = false;
    private bool isEditingAddresses = false;
    private bool isEditingContacts = false;
    private bool isEditingCards = false;

    protected override async Task OnInitializedAsync()
    {
        // Load profile data from API
        profile = await LoadProfile();
    }

    private async Task<CardholderProfile> LoadProfile()
    {
        // Simulate API call
        await Task.Delay(500);
        return new CardholderProfile
        {
            FullName = "John Doe",
            Gender = "Male",
            Addresses = new List<Address>
            {
                new Address { Street = "123 Main St", City = "Springfield", State = "IL", PostalCode = "62701" }
            },
            ContactDetails = new List<ContactDetail>
            {
                new ContactDetail { Type = "Email", Value = "john.doe@example.com" }
            },
            CardDetails = new List<CardDetail>
            {
                new CardDetail { CardNumber = "1234 5678 9012 3456", ExpiryDate = "12/24" }
            }
        };
    }

    private async Task SaveProfile()
    {
        // Simulate API call to save profile
        await Task.Delay(500);
        isEditingDetails = false;
        isEditingAddresses = false;
        isEditingContacts = false;
        isEditingCards = false;
    }
}

<h3>Cardholder Profile</h3>

<section>
    <h4>Details</h4>
    @if (isEditingDetails)
    {
        <EditForm Model="@profile" OnValidSubmit="SaveProfile">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="fullName">Full Name:</label>
                <InputText id="fullName" class="form-control" @bind-Value="profile.FullName" />
            </div>
            <div class="form-group">
                <label for="gender">Gender:</label>
                <InputSelect id="gender" class="form-control" @bind-Value="profile.Gender">
                    @foreach (var gender in profile.Genders)
                    {
                        <option value="@gender">@gender</option>
                    }
                </InputSelect>
            </div>
            <button type="submit" class="btn btn-primary">Save</button>
        </EditForm>
    }
    else
    {
        <p>Full Name: @profile.FullName</p>
        <p>Gender: @profile.Gender</p>
        <button @onclick="() => isEditingDetails = true" class="btn btn-secondary">Edit</button>
    }
</section>

<section>
    <h4>Addresses</h4>
    @if (isEditingAddresses)
    {
        <EditForm Model="@profile" OnValidSubmit="SaveProfile">
            <DataAnnotationsValidator />
            <ValidationSummary />
            @foreach (var address in profile.Addresses)
            {
                <div class="form-group">
                    <label for="street">Street:</label>
                    <InputText id="street" class="form-control" @bind-Value="address.Street" />
                </div>
                <div class="form-group">
                    <label for="city">City:</label>
                    <InputText id="city" class="form-control" @bind-Value="address.City" />
                </div>
                <div class="form-group">
                    <label for="state">State:</label>
                    <InputText id="state" class="form-control" @bind-Value="address.State" />
                </div>
                <div class="form-group">
                    <label for="postalCode">Postal Code:</label>
                    <InputText id="postalCode" class="form-control" @bind-Value="address.PostalCode" />
                </div>
            }
            <button type="submit" class="btn btn-primary">Save</button>
        </EditForm>
    }
    else
    {
        @foreach (var address in profile.Addresses)
        {
            <p>@address.Street, @address.City, @address.State, @address.PostalCode</p>
        }
        <button @onclick="() => isEditingAddresses = true" class="btn btn-secondary">Edit</button>
    }
</section>

<section>
    <h4>Contact Details</h4>
    @if (isEditingContacts)
    {
        <EditForm Model="@profile" OnValidSubmit="SaveProfile">
            <DataAnnotationsValidator />
            <ValidationSummary />
            @foreach (var contact in profile.ContactDetails)
            {
                <div class="form-group">
                    <label for="contactType">Type:</label>
                    <InputText id="contactType" class="form-control" @bind-Value="contact.Type" />
                </div>
                <div class="form-group">
                    <label for="contactValue">Value:</label>
                    <InputText id="contactValue" class="form-control" @bind-Value="contact.Value" />
                </div>
            }
            <button type="submit" class="btn btn-primary">Save</button>
        </EditForm>
    }
    else
    {
        @foreach (var contact in profile.ContactDetails)
        {
            <p>@contact.Type: @contact.Value</p>
        }
        <button @onclick="() => isEditingContacts = true" class="btn btn-secondary">Edit</button>
    }
</section>

<section>
    <h4>Card Details</h4>
    @if (isEditingCards)
    {
        <EditForm Model="@profile" OnValidSubmit="SaveProfile">
            <DataAnnotationsValidator />
            <ValidationSummary />
            @foreach (var card in profile.CardDetails)
            {
                <div class="form-group">
                    <label for="cardNumber">Card Number:</label>
                    <InputText id="cardNumber" class="form-control" @bind-Value="card.CardNumber" />
                </div>
                <div class="form-group">
                    <label for="expiryDate">Expiry Date:</label>
                    <InputText id="expiryDate" class="form-control" @bind-Value="card.ExpiryDate" />
                </div>
            }
            <button type="submit" class="btn btn-primary">Save</button>
        </EditForm>
    }
    else
    {
        @foreach (var card in profile.CardDetails)
        {
            <p>Card Number: @card.CardNumber</p>
            <p>Expiry Date: @card.ExpiryDate</p>
        }
        <button @onclick="() => isEditingCards = true" class="btn btn-secondary">Edit</button>
    }
</section>